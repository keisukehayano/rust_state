{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1","program":"/Users/ohs80340/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","thread_local","--edition=2018","/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=87f4b34fa116ff59","-C","extra-filename=-87f4b34fa116ff59","--out-dir","/Users/ohs80340/rustWork/rust_tate/target/rls/debug/deps","-L","dependency=/Users/ohs80340/rustWork/rust_tate/target/rls/debug/deps","--extern","once_cell=/Users/ohs80340/rustWork/rust_tate/target/rls/debug/deps/libonce_cell-dfcf2b95a80c9ff9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ohs80340/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/ohs80340/rustWork/rust_tate/target/rls/debug/deps/libthread_local-87f4b34fa116ff59.rmeta"},"prelude":{"crate_id":{"name":"thread_local","disambiguator":[3067955913450434032,4429349086197908669]},"crate_root":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src","external_crates":[{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","num":16,"id":{"name":"once_cell","disambiguator":[17567201810973217753,18152559432954411564]}}],"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":333,"byte_end":17934,"line_start":8,"line_end":592,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2587,"byte_end":2601,"line_start":74,"line_end":74,"column_start":18,"column_end":32},"alias_span":null,"name":"CachedIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2603,"byte_end":2616,"line_start":74,"line_end":74,"column_start":34,"column_end":47},"alias_span":null,"name":"CachedIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2618,"byte_end":2635,"line_start":74,"line_end":74,"column_start":49,"column_end":66},"alias_span":null,"name":"CachedThreadLocal","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":333,"byte_end":17934,"line_start":8,"line_end":592,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":70},{"krate":0,"index":97},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":304},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":230},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":249},{"krate":0,"index":251}],"decl_id":null,"docs":" Per-object thread-local storage","sig":null,"attributes":[{"value":"/ Per-object thread-local storage","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ThreadLocal` type which allows a separate copy of","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":373,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ an object to be used for each thread. This allows for per-object","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":454,"byte_end":522,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ thread-local storage, unlike the standard library's `thread_local!` macro","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":523,"byte_end":600,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ which only allows static thread-local storage.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":601,"byte_end":651,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":652,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Per-thread objects are not destroyed when a thread exits. Instead, objects","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":656,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ are only destroyed when the `ThreadLocal` containing them is destroyed.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":735,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also iterate over the thread-local values of all thread in a","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":815,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":888,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ only be done if you have mutable access to the `ThreadLocal` object, which","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ guarantees that you are the only thread currently accessing it.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1047,"byte_end":1114,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that since thread IDs are recycled when a thread exits, it is possible","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ for one thread to retrieve the object of another thread. Since this can only","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1199,"byte_end":1279,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ occur after a thread has exited this does not lead to any race conditions.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1280,"byte_end":1358,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1363,"byte_end":1377,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Basic usage of `ThreadLocal`:","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1382,"byte_end":1415,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1416,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1420,"byte_end":1431,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1432,"byte_end":1466,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ let tls: ThreadLocal<u32> = ThreadLocal::new();","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1467,"byte_end":1518,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(tls.get(), None);","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1519,"byte_end":1551,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tls.get_or(|| 5), &5);","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1552,"byte_end":1589,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(tls.get(), Some(&5));","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1590,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1627,"byte_end":1634,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1635,"byte_end":1638,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Combining thread-local values into a single result:","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1639,"byte_end":1694,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1699,"byte_end":1710,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1711,"byte_end":1745,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1746,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1770,"byte_end":1794,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/ use std::thread;","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1795,"byte_end":1815,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let tls = Arc::new(ThreadLocal::new());","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1820,"byte_end":1863,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Create a bunch of threads to do stuff","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1868,"byte_end":1912,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1913,"byte_end":1932,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/     let tls2 = tls.clone();","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1933,"byte_end":1964,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1965,"byte_end":1996,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/         // Increment a counter to count some event...","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":1997,"byte_end":2054,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/         let cell = tls2.get_or(|| Cell::new(0));","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2055,"byte_end":2107,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/         cell.set(cell.get() + 1);","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2108,"byte_end":2145,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     }).join().unwrap();","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2146,"byte_end":2173,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2174,"byte_end":2179,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2180,"byte_end":2183,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Once all threads are done, collect the counter values and return the","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2184,"byte_end":2259,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ // sum of all thread-local counter values.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2260,"byte_end":2306,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/ let tls = Arc::try_unwrap(tls).unwrap();","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2307,"byte_end":2351,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/ let total = tls.into_iter().fold(0, |x, y| x + y.get());","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2352,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(total, 5);","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2413,"byte_end":2438,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2439,"byte_end":2446,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2448,"byte_end":2470,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"allow(clippy :: mutex_atomic)","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":2471,"byte_end":2502,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":11},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18326,"byte_end":18343,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"CachedThreadLocal","qualname":"::cached::CachedThreadLocal","value":"CachedThreadLocal {  }","parent":null,"children":[{"krate":0,"index":13}],"decl_id":null,"docs":" Wrapper around [`ThreadLocal`].","sig":null,"attributes":[{"value":"/ Wrapper around [`ThreadLocal`].","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18063,"byte_end":18098,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18099,"byte_end":18102,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This used to add a fast path for a single thread, however that has been","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18103,"byte_end":18178,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ obsoleted by performance improvements to [`ThreadLocal`] itself.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18179,"byte_end":18247,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18248,"byte_end":18314,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18630,"byte_end":18633,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<CachedThreadLocal<T>>::new","value":"pub fn new() -> CachedThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `CachedThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18560,"byte_end":18604,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18609,"byte_end":18618,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18837,"byte_end":18840,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"get","qualname":"<CachedThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18750,"byte_end":18811,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18816,"byte_end":18825,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19016,"byte_end":19022,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"get_or","qualname":"<CachedThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18900,"byte_end":18975,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18980,"byte_end":18990,"line_start":39,"line_end":39,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18995,"byte_end":19004,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19328,"byte_end":19338,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<CachedThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19137,"byte_end":19212,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19217,"byte_end":19287,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19292,"byte_end":19302,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19307,"byte_end":19316,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19802,"byte_end":19810,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CachedThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> CachedIterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19482,"byte_end":19550,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19555,"byte_end":19558,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19563,"byte_end":19636,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19641,"byte_end":19711,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19716,"byte_end":19776,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19781,"byte_end":19790,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20300,"byte_end":20305,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"clear","qualname":"<CachedThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":19931,"byte_end":20005,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20010,"byte_end":20048,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20053,"byte_end":20056,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20061,"byte_end":20134,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20139,"byte_end":20209,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20214,"byte_end":20274,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20279,"byte_end":20288,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20989,"byte_end":21003,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<CachedThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20876,"byte_end":20951,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20956,"byte_end":20977,"line_start":105,"line_end":105,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21467,"byte_end":21480,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"CachedIterMut","qualname":"::cached::CachedIterMut","value":"CachedIterMut {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Mutable iterator over the contents of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `CachedThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21328,"byte_end":21392,"line_start":119,"line_end":119,"column_start":1,"column_end":65}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21393,"byte_end":21455,"line_start":120,"line_end":120,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":22019,"byte_end":22033,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"CachedIntoIter","qualname":"::cached::CachedIntoIter","value":"CachedIntoIter {  }","parent":null,"children":[{"krate":0,"index":62}],"decl_id":null,"docs":" An iterator that moves out of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `CachedThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21887,"byte_end":21943,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21944,"byte_end":22007,"line_start":142,"line_end":142,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":3475,"byte_end":3486,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"ThreadLocal","qualname":"::ThreadLocal","value":"ThreadLocal {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" Thread-local variable wrapper","sig":null,"attributes":[{"value":"/ Thread-local variable wrapper","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":3363,"byte_end":3396,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":3397,"byte_end":3400,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](index.html) for more.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":3401,"byte_end":3463,"line_start":102,"line_end":102,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4986,"byte_end":4989,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadLocal<T>>::new","value":"pub fn new() -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `ThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4936,"byte_end":4974,"line_start":155,"line_end":155,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":5283,"byte_end":5296,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ThreadLocal<T>>::with_capacity","value":"pub fn with_capacity(usize) -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\n access the thread local it will never reallocate. The capacity may be rounded up to the\n nearest power of two.\n","sig":null,"attributes":[{"value":"/ Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":5054,"byte_end":5145,"line_start":160,"line_end":160,"column_start":5,"column_end":96}},{"value":"/ access the thread local it will never reallocate. The capacity may be rounded up to the","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":5150,"byte_end":5241,"line_start":161,"line_end":161,"column_start":5,"column_end":96}},{"value":"/ nearest power of two.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":5246,"byte_end":5271,"line_start":162,"line_end":162,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6237,"byte_end":6240,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"get","qualname":"<ThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6164,"byte_end":6225,"line_start":188,"line_end":188,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6447,"byte_end":6453,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"get_or","qualname":"<ThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6345,"byte_end":6420,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6425,"byte_end":6435,"line_start":195,"line_end":195,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6831,"byte_end":6841,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<ThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6654,"byte_end":6729,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6734,"byte_end":6804,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":6809,"byte_end":6819,"line_start":208,"line_end":208,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":8968,"byte_end":8972,"line_start":271,"line_end":271,"column_start":12,"column_end":16},"name":"iter","qualname":"<ThreadLocal<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T> where T: Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the local values of all threads in unspecified\n order.","sig":null,"attributes":[{"value":"/ Returns an iterator over the local values of all threads in unspecified","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":8778,"byte_end":8853,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ order.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":8858,"byte_end":8868,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":8873,"byte_end":8876,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This call can be done safely, as `T` is required to implement [`Sync`].","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":8881,"byte_end":8956,"line_start":270,"line_end":270,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9833,"byte_end":9841,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads in\n unspecified order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads in","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9498,"byte_end":9568,"line_start":294,"line_end":294,"column_start":5,"column_end":75}},{"value":"/ unspecified order.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9573,"byte_end":9595,"line_start":295,"line_end":295,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9600,"byte_end":9603,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9608,"byte_end":9681,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9686,"byte_end":9756,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9761,"byte_end":9821,"line_start":299,"line_end":299,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10334,"byte_end":10339,"line_start":313,"line_end":313,"column_start":12,"column_end":17},"name":"clear","qualname":"<ThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":9979,"byte_end":10053,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10058,"byte_end":10096,"line_start":308,"line_end":308,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10101,"byte_end":10104,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10109,"byte_end":10182,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10187,"byte_end":10257,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10262,"byte_end":10322,"line_start":312,"line_end":312,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11010,"byte_end":11024,"line_start":342,"line_end":342,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<ThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10897,"byte_end":10972,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10977,"byte_end":10998,"line_start":341,"line_end":341,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11405,"byte_end":11409,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" Iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11343,"byte_end":11393,"line_start":355,"line_end":355,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":13892,"byte_end":13899,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" Mutable iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":13822,"byte_end":13880,"line_start":444,"line_end":444,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14426,"byte_end":14434,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" An iterator that moves out of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `ThreadLocal`.","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14364,"byte_end":14414,"line_start":466,"line_end":466,"column_start":1,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18411,"byte_end":18428,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18533,"byte_end":18550,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20387,"byte_end":20404,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20849,"byte_end":20866,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21102,"byte_end":21119,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21303,"byte_end":21320,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21567,"byte_end":21580,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21862,"byte_end":21875,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":22099,"byte_end":22113,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":22366,"byte_end":22380,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":23184,"byte_end":23199,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":24428,"byte_end":24434,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":24889,"byte_end":24901,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":25034,"byte_end":25046,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/unreachable.rs","byte_start":27289,"byte_end":27295,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/unreachable.rs","byte_start":27621,"byte_end":27627,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4196,"byte_end":4207,"line_start":124,"line_end":124,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4241,"byte_end":4252,"line_start":126,"line_end":126,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4354,"byte_end":4365,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4915,"byte_end":4926,"line_start":154,"line_end":154,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10429,"byte_end":10440,"line_start":318,"line_end":318,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10876,"byte_end":10887,"line_start":339,"line_end":339,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11129,"byte_end":11140,"line_start":347,"line_end":347,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11324,"byte_end":11335,"line_start":353,"line_end":353,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11592,"byte_end":11596,"line_start":364,"line_end":364,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":12684,"byte_end":12688,"line_start":398,"line_end":398,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":12881,"byte_end":12891,"line_start":408,"line_end":408,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14022,"byte_end":14029,"line_start":450,"line_end":450,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14345,"byte_end":14352,"line_start":464,"line_end":464,"column_start":37,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14535,"byte_end":14543,"line_start":472,"line_end":472,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14874,"byte_end":14882,"line_start":486,"line_end":486,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18411,"byte_end":18428,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":18533,"byte_end":18550,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20387,"byte_end":20404,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":20849,"byte_end":20866,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21102,"byte_end":21119,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21303,"byte_end":21320,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":11},"to":{"krate":1,"index":3940}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21567,"byte_end":21580,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":21862,"byte_end":21875,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":22099,"byte_end":22113,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/cached.rs","byte_start":22366,"byte_end":22380,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":23184,"byte_end":23199,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":24428,"byte_end":24434,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":24889,"byte_end":24901,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/thread_id.rs","byte_start":25034,"byte_end":25046,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/unreachable.rs","byte_start":27289,"byte_end":27295,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":31731},"to":{"krate":0,"index":99}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/unreachable.rs","byte_start":27621,"byte_end":27627,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":103}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4196,"byte_end":4207,"line_start":124,"line_end":124,"column_start":31,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4241,"byte_end":4252,"line_start":126,"line_end":126,"column_start":27,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4354,"byte_end":4365,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":4915,"byte_end":4926,"line_start":154,"line_end":154,"column_start":15,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10429,"byte_end":10440,"line_start":318,"line_end":318,"column_start":32,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":10876,"byte_end":10887,"line_start":339,"line_end":339,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11129,"byte_end":11140,"line_start":347,"line_end":347,"column_start":43,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11324,"byte_end":11335,"line_start":353,"line_end":353,"column_start":43,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":3940}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":11592,"byte_end":11596,"line_start":364,"line_end":364,"column_start":39,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":12684,"byte_end":12688,"line_start":398,"line_end":398,"column_start":40,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":5544}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":12881,"byte_end":12891,"line_start":408,"line_end":408,"column_start":28,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14022,"byte_end":14029,"line_start":450,"line_end":450,"column_start":32,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14345,"byte_end":14352,"line_start":464,"line_end":464,"column_start":37,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14535,"byte_end":14543,"line_start":472,"line_end":472,"column_start":28,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/ohs80340/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.1/src/lib.rs","byte_start":14874,"byte_end":14882,"line_start":486,"line_end":486,"column_start":37,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":5235}}]}